{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danny/SEI-412/unit-3/codealongs/mern-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// Imports\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken'; // CSS\n\nimport './App.css'; // Components\n\nimport Welcome from './components/Welcome';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport About from './components/About';\n\nfunction App() {\n  _s();\n\n  // Set state values\n  const [currentUser, setCurrentUser] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(true); //useEffect to handle and store the token of the user\n\n  useEffect(() => {\n    let token; //if ther is no token inide localStorage, then the user is not authenticated\n    /// Now grab token with getItem at the localStorage\n\n    if (!localStorage.getItem('jwtToken')) {\n      console.log('is not authenticated');\n      setIsAuthenticated(false);\n    } else {\n      token = jwt_decode(localStorage.getItem('jwtToken'));\n      console.log('token', token);\n      setAuthToken(token);\n      setCurrentUser(token);\n    }\n  }, []);\n\n  const nowCurrentUser = userData => {\n    console.log('----- inside nowCurrentUser -----');\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n  }; // Now let'ss create a logout\n\n\n  const handleLogout = () => {\n    // determine if thereis ajwt\n    /// if there is a token, then rmove it launch a logout\n    if (localStorage.getItem('jwtToten')) {\n      localStorage.removeItem('jwtToken'); //now set the user to null\n\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isAuth: isAuthenticated,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          component: Signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n            nowCurrentUser: nowCurrentUser,\n            setIsAuthenticated: setIsAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Wxrx26qankluQDWwi1kFBjyVj10=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/danny/SEI-412/unit-3/codealongs/mern-frontend/src/App.js"],"names":["React","useEffect","useState","Route","Switch","Redirect","jwt_decode","setAuthToken","Welcome","Navbar","Footer","Profile","Signup","Login","About","App","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","console","log","nowCurrentUser","userData","handleLogout","removeItem","props"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CACA;;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,IAAD,CAAtD,CAHa,CAKb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAImB,KAAJ,CADgB,CAEhB;AACA;;AACA,QAAG,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAqC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAL,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,KAHD,MAGM;AACLC,MAAAA,KAAK,GAAEd,UAAU,CAACe,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACAb,MAAAA,YAAY,CAACa,KAAD,CAAZ;AACAH,MAAAA,cAAc,CAACG,KAAD,CAAd;AACA;AACA,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMK,cAAc,GAAGC,QAAQ,IAAI;AACjCH,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAP,IAAAA,cAAc,CAACS,QAAD,CAAd;AACAP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAJD,CArBa,CA2Bb;;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACzB;AACA;AACA,QAAIN,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACpCD,MAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB,EADoC,CAEpC;;AACAX,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE,QAAC,MAAD;AAAS,MAAA,MAAM,EAAED,eAAjB;AAAkC,MAAA,YAAY,EAAES;AAAhD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAGf;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,MAAM,EAAGiB,KAAD,iBAAW,QAAC,KAAD,OAAWA,KAAX;AAAkB,YAAA,cAAc,EAAEJ,cAAlC;AAAkD,YAAA,kBAAkB,EAAEN;AAAtE;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAYE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAvDQJ,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["// Imports\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\n// CSS\nimport './App.css';\n// Components\nimport Welcome from './components/Welcome';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport About from './components/About';\n\nfunction App() {\n  // Set state values\n  const [currentUser, setCurrentUser] = useState('')\n  const [isAuthenticated, setIsAuthenticated] = useState(true)\n\n  //useEffect to handle and store the token of the user\n  useEffect(() => {\n  let token; \n  //if ther is no token inide localStorage, then the user is not authenticated\n  /// Now grab token with getItem at the localStorage\n  if(!localStorage.getItem('jwtToken')){\n    console.log('is not authenticated')\n    setIsAuthenticated(false)\n  }else {\n   token =jwt_decode(localStorage.getItem('jwtToken'));\n   console.log('token', token)\n   setAuthToken(token) \n   setCurrentUser(token);\n  }\n  }, []);\n\n  const nowCurrentUser = userData => {\n    console.log('----- inside nowCurrentUser -----')\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n  }\n\n  // Now let'ss create a logout\n  const handleLogout = () => {\n    // determine if thereis ajwt\n    /// if there is a token, then rmove it launch a logout\n    if (localStorage.getItem('jwtToten')) {\n      localStorage.removeItem('jwtToken')\n      //now set the user to null\n      setCurrentUser(null);\n      setIsAuthenticated(false)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {/* isAuth is located on the Navbar.js at the components */}\n      <Navbar  isAuth={isAuthenticated} handleLogout={handleLogout} />\n      <div className=\"container mt-5\" >\n        <Switch>\n          {/* routes will go inside of here */}\n          <Route path='/signup' component={ Signup } />\n          <Route path='/login' render={(props) => <Login {...props} nowCurrentUser={nowCurrentUser} setIsAuthenticated={setIsAuthenticated} />} />\n        </Switch>\n\n      </div>\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}